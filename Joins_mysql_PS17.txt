CREATE TABLE Employees (Employee_id INT PRIMARY KEY,First_name VARCHAR(100),Last_name VARCHAR(100),Hire_date DATE,Salary DECIMAL(10, 2),Job_title VARCHAR(100),Manager_id INT,Department_id INT,FOREIGN KEY (Manager_id) REFERENCES Managers(Manager_id),FOREIGN KEY (Department_id) REFERENCES Departments(Department_id));

CREATE TABLE Departments ( Department_id INT PRIMARY KEY, Department_name VARCHAR(100), Manager_id INT, Location_id INT, FOREIGN KEY (Manager_id) REFERENCES Managers(Manager_id), FOREIGN KEY (Location_id) REFERENCES Locations(Location_id));

CREATE TABLE Locations (Location_id INT PRIMARY KEY,Street_address VARCHAR(200),Postal_code VARCHAR(20),City VARCHAR(100),State VARCHAR(100),Country_id INT);

CREATE TABLE Managers ( Manager_id INT PRIMARY KEY, Manager_name VARCHAR(100));

-- Insert values in tables.

1. Find the names (first_name, last_name), the salary of the employees who earn more than the average salary and who work in any of the IT departments:
SELECT e.First_name, e.Last_name, e.Salary FROM Employees e JOIN Departments d ON e.Department_id = d.Department_id WHERE e.Salary > (SELECT AVG(Salary) FROM Employees) AND d.Department_name LIKE '%IT%';

2. Find the names (first_name, last_name), the salary of the employees who earn the same salary as the minimum salary for all departments:
SELECT e.First_name, e.Last_name, e.Salary FROM Employees e WHERE e.Salary = ( SELECT MIN(Salary) FROM Employees WHERE Department_id = e.Department_id);

3. Display the employee ID, first name, last name, salary of all employees whose salary is above average for their departments:
SELECT e.Employee_id, e.First_name, e.Last_name, e.Salary FROM Employees e WHERE e.Salary > ( SELECT AVG(Salary) FROM Employees WHERE Department_id = e.Department_id);

4. Display the department name, manager name, and city:
SELECT d.Department_name, m.Manager_name, l.City FROM Departments d JOIN Managers m ON d.Manager_id = m.Manager_id JOIN Locations l ON d.Location_id = l.Location_id;

5. Display the name (first_name, last_name), hire date, salary of all managers whose experience is more than 15 years:
SELECT e.First_name, e.Last_name, e.Hire_date, e.Salary FROM Employees e WHERE e.Employee_id IN ( SELECT m.Manager_id FROM Managers m WHERE DATEDIFF(CURDATE(), e.Hire_date) / 365 > 15);
