db.createCollection("Student_Data")

db.Student_Data.insertMany([
  { Student_ID: 1, Student_Name: "Alice", Department: "Computer Science", Marks: 85 },
  { Student_ID: 2, Student_Name: "Bob", Department: "Electronics", Marks: 78 },
  { Student_ID: 3, Student_Name: "Charlie", Department: "Computer Science", Marks: 92 },
  { Student_ID: 4, Student_Name: "David", Department: "Mechanical", Marks: 88 },
  { Student_ID: 5, Student_Name: "Eve", Department: "Electronics", Marks: 95 },
  { Student_ID: 6, Student_Name: "Frank", Department: "Computer Science", Marks: 76 },
  { Student_ID: 7, Student_Name: "Grace", Department: "Mechanical", Marks: 80 },
  { Student_ID: 8, Student_Name: "Hannah", Department: "Electronics", Marks: 90 },
  { Student_ID: 9, Student_Name: "Ivy", Department: "Computer Science", Marks: 89 },
  { Student_ID: 10, Student_Name: "Jack", Department: "Mechanical", Marks: 85 }
]);

1. Display all Students based on their departments along with the average Marks of a particular department:
db.Student_Data.aggregate([{$group: { _id: "$Department", Students: { $push: "$Student_Name" }, Average_Marks: { $avg: "$Marks" }}}]);

2. Display the number of Students associated with a particular department:
db.Student_Data.aggregate([{$group: { _id: "$Department",Student_Count: { $sum: 1 }}}]);

3. Display a list of Students with the highest Marks in each Department in descending order of Marks:
db.Student_Data.aggregate([{$sort: { Marks: -1 }},{$group: {_id: "$Department",Student_Name: { $first: "$Student_Name" },Highest_Marks: { $first: "$Marks" } }},{$sort: { Highest_Marks: -1 }}]);

4. Create an index on the field Student_ID:
db.Student_Data.createIndex({ Student_ID: 1 });

5. Create an index on the fields Student_Name and Department:
db.Student_Data.createIndex({ Student_Name: 1, Department:1 });

6. Drop an index on the field Student_ID:
db.Student_Data.dropIndex("Student_ID_1");

7. Drop an index on the fields Student_Name and Department:
db.Student_Data.dropIndex("Student_Name_1_Department_1");

